{% import (
    "github.com/kaashyapan/sqlc-gen-fsharp/internal/core"
)
%}

{%- func Queries(ctx core.TmplCtx) -%}
// Code generated by sqlc. DO NOT EDIT.
// version: sqlc {%s ctx.SqlcVersion %}
{%- if ctx.Settings.Engine == "sqlite" -%}
// for nuget package Fumble --version 1.0.1
{%- endif -%}
{%- if ctx.Settings.Engine == "postgresql" -%}
// for nuget package Npgsql.FSharp --version 5.7.0
{%- endif -%}


namespace {%s ctx.Package %}

{%- for _, mod := range core.Imports(ctx.SourceName, ctx.Package) -%}
open {%s mod %}
{%- endfor -%}

module Sqls = 
{% for _, query := range ctx.Queries %}
  [<Literal>]
  let {%s= query.ConstantName %} =
    """
    {%s= query.SQL %}
  """
{% endfor %}
{%code 
  connstr := ctx.ConnString()
%}
[<RequireQualifiedAccessAttribute>]
type DB (conn: string) =
{%- for _, line := range connstr -%}
  {%s= line %}
{%- endfor -%}


{% for _, query := range ctx.Queries %}
  {%code 
    pipelines := ctx.ConnPipeline(query)
  %}

  {%- for _, line := range query.Comments -%}
  ///{%s= line %}
  {%- endfor -%}
  member this.{%s query.ConstantName %}  ({%s query.Arg.Args() %}) =

    {%- for _, line := range pipelines -%}
    {%s= line %}
    {%- endfor -%}

{% endfor %}

{%- endfunc -%}
