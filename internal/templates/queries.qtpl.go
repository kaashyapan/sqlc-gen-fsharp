// Code generated by qtc from "queries.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line queries.qtpl:1
package templates

//line queries.qtpl:1
import (
	"github.com/kaashyapan/sqlc-gen-fsharp/internal/core"
)

//line queries.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries.qtpl:6
func StreamQueries(qw422016 *qt422016.Writer, ctx core.TmplCtx) {
//line queries.qtpl:6
	qw422016.N().S(`
// Code generated by sqlc. DO NOT EDIT.
// version: sqlc `)
//line queries.qtpl:8
	qw422016.E().S(ctx.SqlcVersion)
//line queries.qtpl:8
	qw422016.N().S(`

namespace `)
//line queries.qtpl:10
	qw422016.E().S(ctx.Package)
//line queries.qtpl:10
	qw422016.N().S(`

`)
//line queries.qtpl:12
	for _, mod := range core.Imports(ctx.SourceName, ctx.Package) {
//line queries.qtpl:12
		qw422016.N().S(`open `)
//line queries.qtpl:13
		qw422016.E().S(mod)
//line queries.qtpl:13
		qw422016.N().S(`
`)
//line queries.qtpl:14
	}
//line queries.qtpl:14
	qw422016.N().S(`
`)
//line queries.qtpl:16
	if ctx.Settings.Engine == "sqlite" {
//line queries.qtpl:16
		qw422016.N().S(`
module Sql = Sqlite
type Sql = Sqlite
`)
//line queries.qtpl:19
	}
//line queries.qtpl:19
	qw422016.N().S(`

module Sqls = 
`)
//line queries.qtpl:22
	for _, query := range ctx.Queries {
//line queries.qtpl:22
		qw422016.N().S(`
  [<Literal>]
  let `)
//line queries.qtpl:24
		qw422016.N().S(query.ConstantName)
//line queries.qtpl:24
		qw422016.N().S(` =
    """
    `)
//line queries.qtpl:26
		qw422016.N().S(query.SQL)
//line queries.qtpl:26
		qw422016.N().S(`
  """
`)
//line queries.qtpl:28
	}
//line queries.qtpl:28
	qw422016.N().S(`
`)
//line queries.qtpl:30
	connstr := ctx.ConnString()

//line queries.qtpl:31
	qw422016.N().S(`
[<RequireQualifiedAccessAttribute>]
type DB (conn: string) =
`)
//line queries.qtpl:34
	for _, line := range connstr {
//line queries.qtpl:34
		qw422016.N().S(`  `)
//line queries.qtpl:35
		qw422016.N().S(line)
//line queries.qtpl:35
		qw422016.N().S(`
`)
//line queries.qtpl:36
	}
//line queries.qtpl:36
	qw422016.N().S(`

`)
//line queries.qtpl:39
	for _, query := range ctx.Queries {
//line queries.qtpl:39
		qw422016.N().S(`
  `)
//line queries.qtpl:41
		pipelines := ctx.ConnPipeline(query)

//line queries.qtpl:42
		qw422016.N().S(`

`)
//line queries.qtpl:44
		for _, line := range query.Comments {
//line queries.qtpl:44
			qw422016.N().S(`  ///`)
//line queries.qtpl:45
			qw422016.N().S(line)
//line queries.qtpl:45
			qw422016.N().S(`
`)
//line queries.qtpl:46
		}
//line queries.qtpl:46
		qw422016.N().S(`  member this.`)
//line queries.qtpl:47
		qw422016.E().S(query.ConstantName)
//line queries.qtpl:47
		qw422016.N().S(`  (`)
//line queries.qtpl:47
		qw422016.E().S(query.Arg.Args())
//line queries.qtpl:47
		qw422016.N().S(`) =

`)
//line queries.qtpl:49
		for _, line := range pipelines {
//line queries.qtpl:49
			qw422016.N().S(`    `)
//line queries.qtpl:50
			qw422016.N().S(line)
//line queries.qtpl:50
			qw422016.N().S(`
`)
//line queries.qtpl:51
		}
//line queries.qtpl:51
		qw422016.N().S(`
`)
//line queries.qtpl:53
	}
//line queries.qtpl:53
	qw422016.N().S(`

`)
//line queries.qtpl:55
}

//line queries.qtpl:55
func WriteQueries(qq422016 qtio422016.Writer, ctx core.TmplCtx) {
//line queries.qtpl:55
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries.qtpl:55
	StreamQueries(qw422016, ctx)
//line queries.qtpl:55
	qt422016.ReleaseWriter(qw422016)
//line queries.qtpl:55
}

//line queries.qtpl:55
func Queries(ctx core.TmplCtx) string {
//line queries.qtpl:55
	qb422016 := qt422016.AcquireByteBuffer()
//line queries.qtpl:55
	WriteQueries(qb422016, ctx)
//line queries.qtpl:55
	qs422016 := string(qb422016.B)
//line queries.qtpl:55
	qt422016.ReleaseByteBuffer(qb422016)
//line queries.qtpl:55
	return qs422016
//line queries.qtpl:55
}
